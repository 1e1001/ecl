# how does the lang

a file
	(use core\typed)
	(define factorial[n[IntUnsigned]][->[IntUnsigned]]
		(if (<= n 1)
			1
			(* n factorial[(sub1 n)])))
gets read into an s-expression
	(%module <module-info>
  	(use (%ref core (%sym typed)))
		(define ((factorial (n IntUnsigned)) (-> IntUnsigned))
			(if (<= n 1)
				1
				(* n (factorial (sub1 n))))))
prephase resolves identifiers and expands macros
	expanding macros requires running an interpreter on any code inside %comp,
	this code is run though this process recursively until the lowest layer has no syntax
		have to compile to a local interpreter - passing objects between instances + delaying execution
postphase fixes unresolved identifiers

compiler assisted lints - typechecking, readability, etc.
	each expression is associated with some number of "tags", each corresponding to a type
		macros or full-file-processors can use those tags to run analysis and/or modify the expression
